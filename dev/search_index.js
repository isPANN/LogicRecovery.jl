var documenterSearchIndex = {"docs":
[{"location":"#LogicRecovery","page":"Home","title":"LogicRecovery","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LogicRecovery.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#LogicRecovery.LogicCircuit","page":"Home","title":"LogicRecovery.LogicCircuit","text":"LogicCircuit\n\nA simple structure representing a logic circuit with inputs and outputs.\n\n\n\n\n\n","category":"type"},{"location":"#LogicRecovery.create_full_adder-Tuple{}","page":"Home","title":"LogicRecovery.create_full_adder","text":"create_full_adder()::LogicCircuit\n\nCreate a full adder circuit instance.\n\n\n\n\n\n","category":"method"},{"location":"#LogicRecovery.create_logic_circuit-Tuple{Int64, Int64, Function}","page":"Home","title":"LogicRecovery.create_logic_circuit","text":"create_logic_circuit(n_inputs::Int, n_outputs::Int, circuit_function::Function;\n                    input_labels::Vector{String}=String[],\n                    output_labels::Vector{String}=String[])::LogicCircuit\n\nCreate a logic circuit with specified number of inputs and outputs.\n\nn_inputs: number of input bits\nn_outputs: number of output bits\ncircuit_function: function that takes input array and returns output array\ninput_labels: labels for input bits (optional)\noutput_labels: labels for output bits (optional)\n\n\n\n\n\n","category":"method"},{"location":"#LogicRecovery.evaluate_circuit-Tuple{LogicCircuit, Vector{Bool}}","page":"Home","title":"LogicRecovery.evaluate_circuit","text":"evaluate_circuit(circuit::LogicCircuit, inputs::Vector{Bool})::Vector{Bool}\n\nEvaluate the circuit with given inputs and return the outputs.\n\n\n\n\n\n","category":"method"},{"location":"#LogicRecovery.get_all_circuit_states-Tuple{LogicCircuit}","page":"Home","title":"LogicRecovery.get_all_circuit_states","text":"get_all_circuit_states(circuit::LogicCircuit)::Vector{Vector{Bool}}\n\nReturn all possible input-output states of the circuit as a vector of vectors. Each inner vector contains [inputs..., outputs...].\n\n\n\n\n\n","category":"method"},{"location":"#LogicRecovery.print_circuit_truth_table-Tuple{LogicCircuit}","page":"Home","title":"LogicRecovery.print_circuit_truth_table","text":"print_circuit_truth_table(circuit::LogicCircuit)\n\nPrint the truth table of the circuit with labeled inputs and outputs.\n\n\n\n\n\n","category":"method"}]
}
